[{"name":"DOWN","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-d-o-w-n/index.html","searchKeys":["DOWN","DOWN","gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN"]},{"name":"DOWN_LEFT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN_LEFT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-d-o-w-n_-l-e-f-t/index.html","searchKeys":["DOWN_LEFT","DOWN_LEFT","gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN_LEFT"]},{"name":"DOWN_RIGHT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN_RIGHT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-d-o-w-n_-r-i-g-h-t/index.html","searchKeys":["DOWN_RIGHT","DOWN_RIGHT","gg.jam.jampadcompose.handlers.CrossHandler.State.DOWN_RIGHT"]},{"name":"LEFT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.LEFT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-l-e-f-t/index.html","searchKeys":["LEFT","LEFT","gg.jam.jampadcompose.handlers.CrossHandler.State.LEFT"]},{"name":"RIGHT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.RIGHT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-r-i-g-h-t/index.html","searchKeys":["RIGHT","RIGHT","gg.jam.jampadcompose.handlers.CrossHandler.State.RIGHT"]},{"name":"UP","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.UP","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-u-p/index.html","searchKeys":["UP","UP","gg.jam.jampadcompose.handlers.CrossHandler.State.UP"]},{"name":"UP_LEFT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.UP_LEFT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-u-p_-l-e-f-t/index.html","searchKeys":["UP_LEFT","UP_LEFT","gg.jam.jampadcompose.handlers.CrossHandler.State.UP_LEFT"]},{"name":"UP_RIGHT","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.UP_RIGHT","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/-u-p_-r-i-g-h-t/index.html","searchKeys":["UP_RIGHT","UP_RIGHT","gg.jam.jampadcompose.handlers.CrossHandler.State.UP_RIGHT"]},{"name":"abstract class GravityArrangement","description":"gg.jam.jampadcompose.geometry.GravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-gravity-arrangement/index.html","searchKeys":["GravityArrangement","abstract class GravityArrangement","gg.jam.jampadcompose.geometry.GravityArrangement"]},{"name":"abstract fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","description":"gg.jam.jampadcompose.handlers.Handler.handle","location":"lib/gg.jam.jampadcompose.handlers/-handler/handle.html","searchKeys":["handle","abstract fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","gg.jam.jampadcompose.handlers.Handler.handle"]},{"name":"abstract val id: Int","description":"gg.jam.jampadcompose.handlers.Handler.id","location":"lib/gg.jam.jampadcompose.handlers/-handler/id.html","searchKeys":["id","abstract val id: Int","gg.jam.jampadcompose.handlers.Handler.id"]},{"name":"abstract val rect: Rect","description":"gg.jam.jampadcompose.handlers.Handler.rect","location":"lib/gg.jam.jampadcompose.handlers/-handler/rect.html","searchKeys":["rect","abstract val rect: Rect","gg.jam.jampadcompose.handlers.Handler.rect"]},{"name":"class CircleGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","description":"gg.jam.jampadcompose.geometry.CircleGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circle-gravity-arrangement/index.html","searchKeys":["CircleGravityArrangement","class CircleGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","gg.jam.jampadcompose.geometry.CircleGravityArrangement"]},{"name":"class CircumferenceCompositeGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","description":"gg.jam.jampadcompose.geometry.CircumferenceCompositeGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circumference-composite-gravity-arrangement/index.html","searchKeys":["CircumferenceCompositeGravityArrangement","class CircumferenceCompositeGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","gg.jam.jampadcompose.geometry.CircumferenceCompositeGravityArrangement"]},{"name":"class CircumferenceGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","description":"gg.jam.jampadcompose.geometry.CircumferenceGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circumference-gravity-arrangement/index.html","searchKeys":["CircumferenceGravityArrangement","class CircumferenceGravityArrangement(ids: List<Int>, rotationInDegrees: Float) : GravityArrangement","gg.jam.jampadcompose.geometry.CircumferenceGravityArrangement"]},{"name":"class GamePadScope","description":"gg.jam.jampadcompose.GamePadScope","location":"lib/gg.jam.jampadcompose/-game-pad-scope/index.html","searchKeys":["GamePadScope","class GamePadScope","gg.jam.jampadcompose.GamePadScope"]},{"name":"class GravityPointsHandler(val id: Int, val rect: Rect, primaryArrangement: GravityArrangement, compositeArrangement: GravityArrangement) : Handler","description":"gg.jam.jampadcompose.handlers.GravityPointsHandler","location":"lib/gg.jam.jampadcompose.handlers/-gravity-points-handler/index.html","searchKeys":["GravityPointsHandler","class GravityPointsHandler(val id: Int, val rect: Rect, primaryArrangement: GravityArrangement, compositeArrangement: GravityArrangement) : Handler","gg.jam.jampadcompose.handlers.GravityPointsHandler"]},{"name":"constructor()","description":"gg.jam.jampadcompose.GamePadScope.GamePadScope","location":"lib/gg.jam.jampadcompose/-game-pad-scope/-game-pad-scope.html","searchKeys":["GamePadScope","constructor()","gg.jam.jampadcompose.GamePadScope.GamePadScope"]},{"name":"constructor()","description":"gg.jam.jampadcompose.geometry.GravityArrangement.GravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-gravity-arrangement/-gravity-arrangement.html","searchKeys":["GravityArrangement","constructor()","gg.jam.jampadcompose.geometry.GravityArrangement.GravityArrangement"]},{"name":"constructor(digitalKeys: PersistentSet<Int> = persistentSetOf(), analogKeys: PersistentMap<Int, Offset> = persistentMapOf())","description":"gg.jam.jampadcompose.inputstate.InputState.InputState","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/-input-state.html","searchKeys":["InputState","constructor(digitalKeys: PersistentSet<Int> = persistentSetOf(), analogKeys: PersistentMap<Int, Offset> = persistentMapOf())","gg.jam.jampadcompose.inputstate.InputState.InputState"]},{"name":"constructor(id: Int, rect: Rect)","description":"gg.jam.jampadcompose.handlers.AnalogHandler.AnalogHandler","location":"lib/gg.jam.jampadcompose.handlers/-analog-handler/-analog-handler.html","searchKeys":["AnalogHandler","constructor(id: Int, rect: Rect)","gg.jam.jampadcompose.handlers.AnalogHandler.AnalogHandler"]},{"name":"constructor(id: Int, rect: Rect)","description":"gg.jam.jampadcompose.handlers.ButtonHandler.ButtonHandler","location":"lib/gg.jam.jampadcompose.handlers/-button-handler/-button-handler.html","searchKeys":["ButtonHandler","constructor(id: Int, rect: Rect)","gg.jam.jampadcompose.handlers.ButtonHandler.ButtonHandler"]},{"name":"constructor(id: Int, rect: Rect)","description":"gg.jam.jampadcompose.handlers.CrossHandler.CrossHandler","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-cross-handler.html","searchKeys":["CrossHandler","constructor(id: Int, rect: Rect)","gg.jam.jampadcompose.handlers.CrossHandler.CrossHandler"]},{"name":"constructor(id: Int, rect: Rect, primaryArrangement: GravityArrangement, compositeArrangement: GravityArrangement)","description":"gg.jam.jampadcompose.handlers.GravityPointsHandler.GravityPointsHandler","location":"lib/gg.jam.jampadcompose.handlers/-gravity-points-handler/-gravity-points-handler.html","searchKeys":["GravityPointsHandler","constructor(id: Int, rect: Rect, primaryArrangement: GravityArrangement, compositeArrangement: GravityArrangement)","gg.jam.jampadcompose.handlers.GravityPointsHandler.GravityPointsHandler"]},{"name":"constructor(ids: List<Int>, rotationInDegrees: Float)","description":"gg.jam.jampadcompose.geometry.CircleGravityArrangement.CircleGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circle-gravity-arrangement/-circle-gravity-arrangement.html","searchKeys":["CircleGravityArrangement","constructor(ids: List<Int>, rotationInDegrees: Float)","gg.jam.jampadcompose.geometry.CircleGravityArrangement.CircleGravityArrangement"]},{"name":"constructor(ids: List<Int>, rotationInDegrees: Float)","description":"gg.jam.jampadcompose.geometry.CircumferenceCompositeGravityArrangement.CircumferenceCompositeGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circumference-composite-gravity-arrangement/-circumference-composite-gravity-arrangement.html","searchKeys":["CircumferenceCompositeGravityArrangement","constructor(ids: List<Int>, rotationInDegrees: Float)","gg.jam.jampadcompose.geometry.CircumferenceCompositeGravityArrangement.CircumferenceCompositeGravityArrangement"]},{"name":"constructor(ids: List<Int>, rotationInDegrees: Float)","description":"gg.jam.jampadcompose.geometry.CircumferenceGravityArrangement.CircumferenceGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-circumference-gravity-arrangement/-circumference-gravity-arrangement.html","searchKeys":["CircumferenceGravityArrangement","constructor(ids: List<Int>, rotationInDegrees: Float)","gg.jam.jampadcompose.geometry.CircumferenceGravityArrangement.CircumferenceGravityArrangement"]},{"name":"constructor(inputState: InputState, gestureStartPointer: Pointer? = null)","description":"gg.jam.jampadcompose.handlers.Handler.Result.Result","location":"lib/gg.jam.jampadcompose.handlers/-handler/-result/-result.html","searchKeys":["Result","constructor(inputState: InputState, gestureStartPointer: Pointer? = null)","gg.jam.jampadcompose.handlers.Handler.Result.Result"]},{"name":"constructor(pointerId: Long, position: Offset)","description":"gg.jam.jampadcompose.handlers.Pointer.Pointer","location":"lib/gg.jam.jampadcompose.handlers/-pointer/-pointer.html","searchKeys":["Pointer","constructor(pointerId: Long, position: Offset)","gg.jam.jampadcompose.handlers.Pointer.Pointer"]},{"name":"constructor(position: Offset, strength: Float, keys: ImmutableSet<Int>)","description":"gg.jam.jampadcompose.geometry.GravityPoint.GravityPoint","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/-gravity-point.html","searchKeys":["GravityPoint","constructor(position: Offset, strength: Float, keys: ImmutableSet<Int>)","gg.jam.jampadcompose.geometry.GravityPoint.GravityPoint"]},{"name":"data class AnalogHandler(val id: Int, val rect: Rect) : Handler","description":"gg.jam.jampadcompose.handlers.AnalogHandler","location":"lib/gg.jam.jampadcompose.handlers/-analog-handler/index.html","searchKeys":["AnalogHandler","data class AnalogHandler(val id: Int, val rect: Rect) : Handler","gg.jam.jampadcompose.handlers.AnalogHandler"]},{"name":"data class ButtonHandler(val id: Int, val rect: Rect) : Handler","description":"gg.jam.jampadcompose.handlers.ButtonHandler","location":"lib/gg.jam.jampadcompose.handlers/-button-handler/index.html","searchKeys":["ButtonHandler","data class ButtonHandler(val id: Int, val rect: Rect) : Handler","gg.jam.jampadcompose.handlers.ButtonHandler"]},{"name":"data class CrossHandler(val id: Int, val rect: Rect) : Handler","description":"gg.jam.jampadcompose.handlers.CrossHandler","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/index.html","searchKeys":["CrossHandler","data class CrossHandler(val id: Int, val rect: Rect) : Handler","gg.jam.jampadcompose.handlers.CrossHandler"]},{"name":"data class GravityPoint(val position: Offset, val strength: Float, val keys: ImmutableSet<Int>)","description":"gg.jam.jampadcompose.geometry.GravityPoint","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/index.html","searchKeys":["GravityPoint","data class GravityPoint(val position: Offset, val strength: Float, val keys: ImmutableSet<Int>)","gg.jam.jampadcompose.geometry.GravityPoint"]},{"name":"data class InputState(digitalKeys: PersistentSet<Int> = persistentSetOf(), analogKeys: PersistentMap<Int, Offset> = persistentMapOf())","description":"gg.jam.jampadcompose.inputstate.InputState","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/index.html","searchKeys":["InputState","data class InputState(digitalKeys: PersistentSet<Int> = persistentSetOf(), analogKeys: PersistentMap<Int, Offset> = persistentMapOf())","gg.jam.jampadcompose.inputstate.InputState"]},{"name":"data class Pointer(val pointerId: Long, val position: Offset)","description":"gg.jam.jampadcompose.handlers.Pointer","location":"lib/gg.jam.jampadcompose.handlers/-pointer/index.html","searchKeys":["Pointer","data class Pointer(val pointerId: Long, val position: Offset)","gg.jam.jampadcompose.handlers.Pointer"]},{"name":"data class Result(val inputState: InputState, val gestureStartPointer: Pointer? = null)","description":"gg.jam.jampadcompose.handlers.Handler.Result","location":"lib/gg.jam.jampadcompose.handlers/-handler/-result/index.html","searchKeys":["Result","data class Result(val inputState: InputState, val gestureStartPointer: Pointer? = null)","gg.jam.jampadcompose.handlers.Handler.Result"]},{"name":"enum State : Enum<CrossHandler.State> ","description":"gg.jam.jampadcompose.handlers.CrossHandler.State","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/index.html","searchKeys":["State","enum State : Enum<CrossHandler.State> ","gg.jam.jampadcompose.handlers.CrossHandler.State"]},{"name":"fun <R> () -> R.memoize(): () -> R","description":"gg.jam.jampadcompose.utils.memoize","location":"lib/gg.jam.jampadcompose.utils/memoize.html","searchKeys":["memoize","fun <R> () -> R.memoize(): () -> R","gg.jam.jampadcompose.utils.memoize"]},{"name":"fun ButtonForegroundDefault(modifier: Modifier = Modifier, pressed: Boolean, scale: Float = 0.75f, icon: ImageVector? = null, color: Color = MaterialTheme.colorScheme.primary, pressedColor: Color = MaterialTheme.colorScheme.inversePrimary)","description":"gg.jam.jampadcompose.ui.ButtonForegroundDefault","location":"lib/gg.jam.jampadcompose.ui/-button-foreground-default.html","searchKeys":["ButtonForegroundDefault","fun ButtonForegroundDefault(modifier: Modifier = Modifier, pressed: Boolean, scale: Float = 0.75f, icon: ImageVector? = null, color: Color = MaterialTheme.colorScheme.primary, pressedColor: Color = MaterialTheme.colorScheme.inversePrimary)","gg.jam.jampadcompose.ui.ButtonForegroundDefault"]},{"name":"fun CompositeForegroundDefault(modifier: Modifier = Modifier, pressed: Boolean, color: Color = MaterialTheme.colorScheme.primary.copy(alpha = 0.5f), pressedColor: Color = MaterialTheme.colorScheme.inversePrimary.copy(alpha = 0.5f))","description":"gg.jam.jampadcompose.ui.CompositeForegroundDefault","location":"lib/gg.jam.jampadcompose.ui/-composite-foreground-default.html","searchKeys":["CompositeForegroundDefault","fun CompositeForegroundDefault(modifier: Modifier = Modifier, pressed: Boolean, color: Color = MaterialTheme.colorScheme.primary.copy(alpha = 0.5f), pressedColor: Color = MaterialTheme.colorScheme.inversePrimary.copy(alpha = 0.5f))","gg.jam.jampadcompose.ui.CompositeForegroundDefault"]},{"name":"fun DialBackgroundDefault(modifier: Modifier = Modifier)","description":"gg.jam.jampadcompose.ui.DialBackgroundDefault","location":"lib/gg.jam.jampadcompose.ui/-dial-background-default.html","searchKeys":["DialBackgroundDefault","fun DialBackgroundDefault(modifier: Modifier = Modifier)","gg.jam.jampadcompose.ui.DialBackgroundDefault"]},{"name":"fun Float.toDegrees(): Float","description":"gg.jam.jampadcompose.utils.GeometryUtils.toDegrees","location":"lib/gg.jam.jampadcompose.utils/-geometry-utils/to-degrees.html","searchKeys":["toDegrees","fun Float.toDegrees(): Float","gg.jam.jampadcompose.utils.GeometryUtils.toDegrees"]},{"name":"fun Float.toRadians(): Float","description":"gg.jam.jampadcompose.utils.GeometryUtils.toRadians","location":"lib/gg.jam.jampadcompose.utils/-geometry-utils/to-radians.html","searchKeys":["toRadians","fun Float.toRadians(): Float","gg.jam.jampadcompose.utils.GeometryUtils.toRadians"]},{"name":"fun GamePad(modifier: Modifier = Modifier, onInputStateUpdated: (InputState) -> Unit = { }, content: GamePadScope.() -> Unit)","description":"gg.jam.jampadcompose.GamePad","location":"lib/gg.jam.jampadcompose/-game-pad.html","searchKeys":["GamePad","fun GamePad(modifier: Modifier = Modifier, onInputStateUpdated: (InputState) -> Unit = { }, content: GamePadScope.() -> Unit)","gg.jam.jampadcompose.GamePad"]},{"name":"fun GamePadScope.AnalogDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, foreground: (Boolean) -> Unit = {\n        ButtonForegroundDefault(pressed = it, scale = 1f)\n    })","description":"gg.jam.jampadcompose.dials.AnalogDial","location":"lib/gg.jam.jampadcompose.dials/-analog-dial.html","searchKeys":["AnalogDial","fun GamePadScope.AnalogDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, foreground: (Boolean) -> Unit = {\n        ButtonForegroundDefault(pressed = it, scale = 1f)\n    })","gg.jam.jampadcompose.dials.AnalogDial"]},{"name":"fun GamePadScope.ButtonDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, foreground: () -> Unit = {\n        ButtonForegroundDefault(\n            pressed = inputState.value.getDigitalKey(id)\n        )\n    })","description":"gg.jam.jampadcompose.dials.ButtonDial","location":"lib/gg.jam.jampadcompose.dials/-button-dial.html","searchKeys":["ButtonDial","fun GamePadScope.ButtonDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, foreground: () -> Unit = {\n        ButtonForegroundDefault(\n            pressed = inputState.value.getDigitalKey(id)\n        )\n    })","gg.jam.jampadcompose.dials.ButtonDial"]},{"name":"fun GamePadScope.CrossDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, rightDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowRight\n        )\n    }, bottomDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowDown\n        )\n    }, leftDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowLeft\n        )\n    }, topDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowUp\n        )\n    })","description":"gg.jam.jampadcompose.dials.CrossDial","location":"lib/gg.jam.jampadcompose.dials/-cross-dial.html","searchKeys":["CrossDial","fun GamePadScope.CrossDial(modifier: Modifier = Modifier, id: Int, background: () -> Unit = { DialBackgroundDefault() }, rightDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowRight\n        )\n    }, bottomDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowDown\n        )\n    }, leftDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowLeft\n        )\n    }, topDial: (Boolean) -> Unit = {\n        ButtonForegroundDefault(\n            pressed = it,\n            icon = Icons.Default.KeyboardArrowUp\n        )\n    })","gg.jam.jampadcompose.dials.CrossDial"]},{"name":"fun GamePadScope.FaceButtonsDial(modifier: Modifier = Modifier, rotationInDegrees: Float = 0.0f, ids: List<Int>, startFromCenter: Boolean = false, includeComposite: Boolean = true, background: () -> Unit = { DialBackgroundDefault() }, foreground: (Int, Boolean) -> Unit = { _, pressed ->\n        ButtonForegroundDefault(pressed = pressed)\n    }, foregroundComposite: (Boolean) -> Unit = { pressed ->\n        CompositeForegroundDefault(pressed = pressed)\n    })","description":"gg.jam.jampadcompose.dials.FaceButtonsDial","location":"lib/gg.jam.jampadcompose.dials/-face-buttons-dial.html","searchKeys":["FaceButtonsDial","fun GamePadScope.FaceButtonsDial(modifier: Modifier = Modifier, rotationInDegrees: Float = 0.0f, ids: List<Int>, startFromCenter: Boolean = false, includeComposite: Boolean = true, background: () -> Unit = { DialBackgroundDefault() }, foreground: (Int, Boolean) -> Unit = { _, pressed ->\n        ButtonForegroundDefault(pressed = pressed)\n    }, foregroundComposite: (Boolean) -> Unit = { pressed ->\n        CompositeForegroundDefault(pressed = pressed)\n    })","gg.jam.jampadcompose.dials.FaceButtonsDial"]},{"name":"fun Offset.relativeTo(rect: Rect): Offset","description":"gg.jam.jampadcompose.utils.relativeTo","location":"lib/gg.jam.jampadcompose.utils/relative-to.html","searchKeys":["relativeTo","fun Offset.relativeTo(rect: Rect): Offset","gg.jam.jampadcompose.utils.relativeTo"]},{"name":"fun computeSizeOfItemsOnCircumference(itemsCount: Int): Float","description":"gg.jam.jampadcompose.utils.GeometryUtils.computeSizeOfItemsOnCircumference","location":"lib/gg.jam.jampadcompose.utils/-geometry-utils/compute-size-of-items-on-circumference.html","searchKeys":["computeSizeOfItemsOnCircumference","fun computeSizeOfItemsOnCircumference(itemsCount: Int): Float","gg.jam.jampadcompose.utils.GeometryUtils.computeSizeOfItemsOnCircumference"]},{"name":"fun distance(point: Offset): Float","description":"gg.jam.jampadcompose.geometry.GravityPoint.distance","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/distance.html","searchKeys":["distance","fun distance(point: Offset): Float","gg.jam.jampadcompose.geometry.GravityPoint.distance"]},{"name":"fun getAnalogKey(analogId: Int): Offset","description":"gg.jam.jampadcompose.inputstate.InputState.getAnalogKey","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/get-analog-key.html","searchKeys":["getAnalogKey","fun getAnalogKey(analogId: Int): Offset","gg.jam.jampadcompose.inputstate.InputState.getAnalogKey"]},{"name":"fun getDigitalKey(digitalId: Int): Boolean","description":"gg.jam.jampadcompose.inputstate.InputState.getDigitalKey","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/get-digital-key.html","searchKeys":["getDigitalKey","fun getDigitalKey(digitalId: Int): Boolean","gg.jam.jampadcompose.inputstate.InputState.getDigitalKey"]},{"name":"fun getGravityPoints(): List<GravityPoint>","description":"gg.jam.jampadcompose.geometry.GravityArrangement.getGravityPoints","location":"lib/gg.jam.jampadcompose.geometry/-gravity-arrangement/get-gravity-points.html","searchKeys":["getGravityPoints","fun getGravityPoints(): List<GravityPoint>","gg.jam.jampadcompose.geometry.GravityArrangement.getGravityPoints"]},{"name":"fun getSize(): Float","description":"gg.jam.jampadcompose.geometry.GravityArrangement.getSize","location":"lib/gg.jam.jampadcompose.geometry/-gravity-arrangement/get-size.html","searchKeys":["getSize","fun getSize(): Float","gg.jam.jampadcompose.geometry.GravityArrangement.getSize"]},{"name":"fun setAnalogKey(analogId: Int, offset: Offset): InputState","description":"gg.jam.jampadcompose.inputstate.InputState.setAnalogKey","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/set-analog-key.html","searchKeys":["setAnalogKey","fun setAnalogKey(analogId: Int, offset: Offset): InputState","gg.jam.jampadcompose.inputstate.InputState.setAnalogKey"]},{"name":"fun setDigitalKey(digitalId: Int, value: Boolean): InputState","description":"gg.jam.jampadcompose.inputstate.InputState.setDigitalKey","location":"lib/gg.jam.jampadcompose.inputstate/-input-state/set-digital-key.html","searchKeys":["setDigitalKey","fun setDigitalKey(digitalId: Int, value: Boolean): InputState","gg.jam.jampadcompose.inputstate.InputState.setDigitalKey"]},{"name":"fun valueOf(value: String): CrossHandler.State","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.valueOf","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CrossHandler.State","gg.jam.jampadcompose.handlers.CrossHandler.State.valueOf"]},{"name":"fun values(): Array<CrossHandler.State>","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.values","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/values.html","searchKeys":["values","fun values(): Array<CrossHandler.State>","gg.jam.jampadcompose.handlers.CrossHandler.State.values"]},{"name":"interface Handler","description":"gg.jam.jampadcompose.handlers.Handler","location":"lib/gg.jam.jampadcompose.handlers/-handler/index.html","searchKeys":["Handler","interface Handler","gg.jam.jampadcompose.handlers.Handler"]},{"name":"object Constants","description":"gg.jam.jampadcompose.utils.Constants","location":"lib/gg.jam.jampadcompose.utils/-constants/index.html","searchKeys":["Constants","object Constants","gg.jam.jampadcompose.utils.Constants"]},{"name":"object EmptyGravityArrangement : GravityArrangement","description":"gg.jam.jampadcompose.geometry.EmptyGravityArrangement","location":"lib/gg.jam.jampadcompose.geometry/-empty-gravity-arrangement/index.html","searchKeys":["EmptyGravityArrangement","object EmptyGravityArrangement : GravityArrangement","gg.jam.jampadcompose.geometry.EmptyGravityArrangement"]},{"name":"object GeometryUtils","description":"gg.jam.jampadcompose.utils.GeometryUtils","location":"lib/gg.jam.jampadcompose.utils/-geometry-utils/index.html","searchKeys":["GeometryUtils","object GeometryUtils","gg.jam.jampadcompose.utils.GeometryUtils"]},{"name":"open fun handlerId(): String","description":"gg.jam.jampadcompose.handlers.Handler.handlerId","location":"lib/gg.jam.jampadcompose.handlers/-handler/handler-id.html","searchKeys":["handlerId","open fun handlerId(): String","gg.jam.jampadcompose.handlers.Handler.handlerId"]},{"name":"open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","description":"gg.jam.jampadcompose.handlers.AnalogHandler.handle","location":"lib/gg.jam.jampadcompose.handlers/-analog-handler/handle.html","searchKeys":["handle","open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","gg.jam.jampadcompose.handlers.AnalogHandler.handle"]},{"name":"open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","description":"gg.jam.jampadcompose.handlers.ButtonHandler.handle","location":"lib/gg.jam.jampadcompose.handlers/-button-handler/handle.html","searchKeys":["handle","open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","gg.jam.jampadcompose.handlers.ButtonHandler.handle"]},{"name":"open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","description":"gg.jam.jampadcompose.handlers.CrossHandler.handle","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/handle.html","searchKeys":["handle","open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","gg.jam.jampadcompose.handlers.CrossHandler.handle"]},{"name":"open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","description":"gg.jam.jampadcompose.handlers.GravityPointsHandler.handle","location":"lib/gg.jam.jampadcompose.handlers/-gravity-points-handler/handle.html","searchKeys":["handle","open override fun handle(pointers: List<Pointer>, inputState: InputState, gestureStartPointer: Pointer?): Handler.Result","gg.jam.jampadcompose.handlers.GravityPointsHandler.handle"]},{"name":"open override val id: Int","description":"gg.jam.jampadcompose.handlers.AnalogHandler.id","location":"lib/gg.jam.jampadcompose.handlers/-analog-handler/id.html","searchKeys":["id","open override val id: Int","gg.jam.jampadcompose.handlers.AnalogHandler.id"]},{"name":"open override val id: Int","description":"gg.jam.jampadcompose.handlers.ButtonHandler.id","location":"lib/gg.jam.jampadcompose.handlers/-button-handler/id.html","searchKeys":["id","open override val id: Int","gg.jam.jampadcompose.handlers.ButtonHandler.id"]},{"name":"open override val id: Int","description":"gg.jam.jampadcompose.handlers.CrossHandler.id","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/id.html","searchKeys":["id","open override val id: Int","gg.jam.jampadcompose.handlers.CrossHandler.id"]},{"name":"open override val id: Int","description":"gg.jam.jampadcompose.handlers.GravityPointsHandler.id","location":"lib/gg.jam.jampadcompose.handlers/-gravity-points-handler/id.html","searchKeys":["id","open override val id: Int","gg.jam.jampadcompose.handlers.GravityPointsHandler.id"]},{"name":"open override val rect: Rect","description":"gg.jam.jampadcompose.handlers.AnalogHandler.rect","location":"lib/gg.jam.jampadcompose.handlers/-analog-handler/rect.html","searchKeys":["rect","open override val rect: Rect","gg.jam.jampadcompose.handlers.AnalogHandler.rect"]},{"name":"open override val rect: Rect","description":"gg.jam.jampadcompose.handlers.ButtonHandler.rect","location":"lib/gg.jam.jampadcompose.handlers/-button-handler/rect.html","searchKeys":["rect","open override val rect: Rect","gg.jam.jampadcompose.handlers.ButtonHandler.rect"]},{"name":"open override val rect: Rect","description":"gg.jam.jampadcompose.handlers.CrossHandler.rect","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/rect.html","searchKeys":["rect","open override val rect: Rect","gg.jam.jampadcompose.handlers.CrossHandler.rect"]},{"name":"open override val rect: Rect","description":"gg.jam.jampadcompose.handlers.GravityPointsHandler.rect","location":"lib/gg.jam.jampadcompose.handlers/-gravity-points-handler/rect.html","searchKeys":["rect","open override val rect: Rect","gg.jam.jampadcompose.handlers.GravityPointsHandler.rect"]},{"name":"val PI2: Float","description":"gg.jam.jampadcompose.utils.Constants.PI2","location":"lib/gg.jam.jampadcompose.utils/-constants/-p-i2.html","searchKeys":["PI2","val PI2: Float","gg.jam.jampadcompose.utils.Constants.PI2"]},{"name":"val PI: Float","description":"gg.jam.jampadcompose.utils.Constants.PI","location":"lib/gg.jam.jampadcompose.utils/-constants/-p-i.html","searchKeys":["PI","val PI: Float","gg.jam.jampadcompose.utils.Constants.PI"]},{"name":"val entries: EnumEntries<CrossHandler.State>","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.entries","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/entries.html","searchKeys":["entries","val entries: EnumEntries<CrossHandler.State>","gg.jam.jampadcompose.handlers.CrossHandler.State.entries"]},{"name":"val gestureStartPointer: Pointer? = null","description":"gg.jam.jampadcompose.handlers.Handler.Result.gestureStartPointer","location":"lib/gg.jam.jampadcompose.handlers/-handler/-result/gesture-start-pointer.html","searchKeys":["gestureStartPointer","val gestureStartPointer: Pointer? = null","gg.jam.jampadcompose.handlers.Handler.Result.gestureStartPointer"]},{"name":"val inputState: InputState","description":"gg.jam.jampadcompose.handlers.Handler.Result.inputState","location":"lib/gg.jam.jampadcompose.handlers/-handler/-result/input-state.html","searchKeys":["inputState","val inputState: InputState","gg.jam.jampadcompose.handlers.Handler.Result.inputState"]},{"name":"val keys: ImmutableSet<Int>","description":"gg.jam.jampadcompose.geometry.GravityPoint.keys","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/keys.html","searchKeys":["keys","val keys: ImmutableSet<Int>","gg.jam.jampadcompose.geometry.GravityPoint.keys"]},{"name":"val pointerId: Long","description":"gg.jam.jampadcompose.handlers.Pointer.pointerId","location":"lib/gg.jam.jampadcompose.handlers/-pointer/pointer-id.html","searchKeys":["pointerId","val pointerId: Long","gg.jam.jampadcompose.handlers.Pointer.pointerId"]},{"name":"val position: Offset","description":"gg.jam.jampadcompose.geometry.GravityPoint.position","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/position.html","searchKeys":["position","val position: Offset","gg.jam.jampadcompose.geometry.GravityPoint.position"]},{"name":"val position: Offset","description":"gg.jam.jampadcompose.handlers.CrossHandler.State.position","location":"lib/gg.jam.jampadcompose.handlers/-cross-handler/-state/position.html","searchKeys":["position","val position: Offset","gg.jam.jampadcompose.handlers.CrossHandler.State.position"]},{"name":"val position: Offset","description":"gg.jam.jampadcompose.handlers.Pointer.position","location":"lib/gg.jam.jampadcompose.handlers/-pointer/position.html","searchKeys":["position","val position: Offset","gg.jam.jampadcompose.handlers.Pointer.position"]},{"name":"val strength: Float","description":"gg.jam.jampadcompose.geometry.GravityPoint.strength","location":"lib/gg.jam.jampadcompose.geometry/-gravity-point/strength.html","searchKeys":["strength","val strength: Float","gg.jam.jampadcompose.geometry.GravityPoint.strength"]}]